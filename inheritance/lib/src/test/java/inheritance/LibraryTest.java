/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test
    public void constructorTest() {
        Restaurant restaurantObject = new Restaurant("res", 3, "$");
        assertEquals("res", restaurantObject.getName() );
        assertEquals(3, restaurantObject.getNumOfStars());
        assertEquals("$", restaurantObject.getPriceCategory());
    }
    @Test
    public void restaurantToStringTest() {
        Restaurant restaurantObject = new Restaurant("res", 4, "$");
        Review abdReview1 = new Review("good","abd",4);
        restaurantObject.addReview( abdReview1);
        assertEquals("Restaurant{name='res', numOfStars=4* , priceCategory='$', review=[Review{body='good', author='abd', numOfStars=4}]}", restaurantObject.toString());
    }

    @Test
    public void RestuarantaddReviewTest() {
        Restaurant restaurantObject = new Restaurant("res", 3, "$");
        Review abdReview1 = new Review("good","abd",5);
        Review abdReview2 = new Review("good","abd",5);
        restaurantObject.addReview( abdReview1);
        restaurantObject.addReview( abdReview2);

        int numOfReviews = restaurantObject.getReviews().size();
        assertEquals(2, numOfReviews);
    }


//
    @Test public void RestuarantaverageRatingTest() {
        Restaurant restuarantObject = new Restaurant("res", 3, "$$");
        Review abdReview1 = new Review("good","abd",5);
        Review abdReview2 = new Review("good","abd",5);
        restuarantObject.addReview(abdReview1);
        restuarantObject.addReview(abdReview2);
        restuarantObject.averageReview();
        assertEquals(5, restuarantObject.getNumOfStars());
    }
    @Test
    public void testReview_constructor() {
        Review reviewObject = new Review( "good", "abd",5);
        assertEquals("Review{body='good', author='abd', numOfStars=5}",reviewObject.toString());
    }

    @Test
    public void reveiewToStringTest() {
        Review reviewObject = new Review( "good", "abd",5);
        assertEquals("Review{body='good', author='abd', numOfStars=5}",reviewObject.toString());

    }
    // lab 07
    @Test
    public void testShopToString() {

        Shop shop = new Shop("Max", "It is a clothing shop.", "$$");
        System.out.println(shop.toString());
        assertEquals("Shop{name='Max', description='It is a clothing shop.', numOfDollarSigns=$$, reviews=[]}",shop.toString());
    }

    @Test public void testTheater() {
        List<String> list = new ArrayList<>();
        list.add("Titanic");
        list.add("The Lion King");
        Theater theater = new Theater("Prime Cinema",list);
        assertEquals("Theater{name ='Prime Cinema', movieList=[Titanic, The Lion King]}",theater.toString());

        theater.addMovie("Home alone");
        assertEquals("Theater{name ='Prime Cinema', movieList=[Titanic, The Lion King, Home alone]}",theater.toString());

        theater.removeMovie("Titanic");
        assertEquals("Theater{name ='Prime Cinema', movieList=[The Lion King, Home alone]}",theater.toString());

    }
//
    @Test public void testTheaterReview(){
        List<String> list = new ArrayList<>();
        list.add("Titanic");
        list.add("The Lion King");
        Theater theater = new Theater("Prime Cinema",list);
        theater.addReview("welcome","abd" ,5);
        assertEquals("Theater{name ='Prime Cinema', movieList=[Titanic, The Lion King] {=Review{body='welcome', author='abd', numOfStars=5}}",theater.toString());

        theater.addReview("welcome to jordan ","abd ata" ,3,"king panda");
        assertEquals("Theater{name ='Prime Cinema', movieList=[Titanic, The Lion King] {=Review{body='welcome', author='abd', numOfStars=5}, king panda=Review{body='welcome to jordan ', author='abd ata', numOfStars=3, movie=king panda}}",theater.toString());

    }
}
